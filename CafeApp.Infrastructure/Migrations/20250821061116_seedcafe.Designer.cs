// <auto-generated />
using System;
using CafeApp.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CafeApp.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250821061116_seedcafe")]
    partial class seedcafe
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CafeApp.Core.Entities.CafeEntity", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("logo")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("Cafes");

                    b.HasData(
                        new
                        {
                            id = new Guid("ff40f939-52bb-4511-aa3b-07b519403a08"),
                            description = "A cozy cafe with a variety of coffee and snacks.",
                            location = "Downtown",
                            name = "Cafe Mocha"
                        },
                        new
                        {
                            id = new Guid("aee86791-d668-408d-bfd6-43543cf24a73"),
                            description = "A cozy cafe with a variety of coffee and snacks.",
                            location = "Downtown",
                            name = "Cafe Latte"
                        },
                        new
                        {
                            id = new Guid("905dd236-c348-4d3b-ac3e-923afed6e3de"),
                            description = "A small cafe specializing in espresso drinks.",
                            location = "Uptown",
                            name = "Cafe Espresso"
                        },
                        new
                        {
                            id = new Guid("fae99b40-7623-42c2-b6f3-d01ca8c7d784"),
                            description = "A cafe known for its American-style coffee.",
                            location = "Uptown",
                            name = "Cafe Americano"
                        });
                });

            modelBuilder.Entity("CafeApp.Core.Entities.EmployeeEntity", b =>
                {
                    b.Property<string>("id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid?>("cafe_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("email_address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("phone_number")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<DateTime?>("start_date")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("cafe_id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("CafeApp.Core.Entities.EmployeeEntity", b =>
                {
                    b.HasOne("CafeApp.Core.Entities.CafeEntity", "cafe")
                        .WithMany("Employees")
                        .HasForeignKey("cafe_id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("cafe");
                });

            modelBuilder.Entity("CafeApp.Core.Entities.CafeEntity", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
